{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Player","isPlaying","setIsPlaying","audioRef","songInfo","setSongInfo","currentSong","songs","setCurrentSong","setSongs","useState","activeVolume","setActiveVolume","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","trackAnim","transform","animationPercentage","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","className","currentTime","style","background","color","value","type","max","duration","min","onChange","e","target","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","faVolumeDown","volume","step","Song","src","cover","alt","name","artist","LibrarySong","songSelectHandler","selectedSong","filter","state","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","audio","uuidv4","App","useRef","chillhop","timeUpdateHandler","roundedCurrent","round","roundedDuration","percentage","songEndHandler","onLoadedMetadata","onTimeUpdate","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d79cd8cf.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause,\r\n  faVolumeDown,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\n\r\nconst Player = ({\r\n  isPlaying,\r\n  setIsPlaying,\r\n  audioRef,\r\n  songInfo,\r\n  setSongInfo,\r\n  currentSong,\r\n  songs,\r\n  setCurrentSong,\r\n  setSongs,\r\n}) => {\r\n  const [activeVolume, setActiveVolume] = useState(false);\r\n  //UseEffect Update List\r\n  const activeLibraryHandler = (nextPrev) => {\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === nextPrev.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n\r\n    setSongs(newSongs);\r\n  };\r\n\r\n  const trackAnim = {\r\n    transform: `translateX(${songInfo.animationPercentage}%)`,\r\n  };\r\n  //Event Handlers\r\n  function getTime(time) {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  }\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n  const skipTrackHandler = async (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n\r\n    //Forward BAck\r\n    if (direction === \"skip-forward\") {\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\r\n    }\r\n    if (direction === \"skip-back\") {\r\n      if ((currentIndex - 1) % songs.length === -1) {\r\n        await setCurrentSong(songs[songs.length - 1]);\r\n        activeLibraryHandler(songs[songs.length - 1]);\r\n        if (isPlaying) audioRef.current.play();\r\n        return;\r\n      }\r\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n      activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\r\n    }\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n  const changeVolume = (e) => {\r\n    let value = e.target.value;\r\n    audioRef.current.volume = value;\r\n    setSongInfo({ ...songInfo, volume: value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <div\r\n          style={{\r\n            background: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`,\r\n          }}\r\n          className=\"track\"\r\n        >\r\n          <input\r\n            value={songInfo.currentTime}\r\n            type=\"range\"\r\n            max={songInfo.duration || 0}\r\n            min={0}\r\n            onChange={dragHandler}\r\n          />\r\n          <div style={trackAnim} className=\"animate-track\"></div>\r\n        </div>\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => skipTrackHandler(\"skip-back\")}\r\n          className=\"skip-back\"\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"play\"\r\n          size=\"2x\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          className=\"skip-forward\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n          onClick={() => skipTrackHandler(\"skip-forward\")}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={() => setActiveVolume(!activeVolume)}\r\n          icon={faVolumeDown}\r\n        />\r\n        {activeVolume && (\r\n          <input\r\n            onChange={changeVolume}\r\n            value={songInfo.volume}\r\n            max=\"1\"\r\n            min=\"0\"\r\n            step=\"0.01\"\r\n            type=\"range\"\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;","import React from 'react';\r\n\r\nconst Song = ({ currentSong }) => {\r\n    return (\r\n        <div className='song-container' >\r\n            <img src={currentSong.cover} alt={currentSong.name} ></img>\r\n            <h2>{ currentSong.name}</h2>\r\n            <h3>{ currentSong.artist}</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Song;","import React from 'react';\r\n\r\nconst LibrarySong = ({ song,songs,setCurrentSong,audioRef,isPlaying ,id,setSongs}) => {\r\n  const songSelectHandler = async () => {\r\n       \r\n    const selectedSong = songs.filter((state) => state.id === id);\r\n    await setCurrentSong(selectedSong[0]);\r\n    //Set Active in library\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n   \r\n    setSongs(newSongs);\r\n    if (isPlaying) audioRef.current.play();\r\n \r\n  };\r\n\r\n    return (\r\n        <div  onClick={songSelectHandler} className={`library-song ${song.active? 'selected':\"\"}`} >\r\n            <img src={song.cover} alt={song.name} ></img>\r\n            <div className=\"song-description\">\r\n                <h3>{ song.name}</h3>\r\n                <h4>{ song.artist}</h4>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LibrarySong;","import React from 'react';\r\nimport LibrarySong from './LibrarySong';\r\n\r\nconst Library = ({songs,setCurrentSong,isPlaying,setSongs, libraryStatus,audioRef}) => {\r\n    return (\r\n        <div className={`library ${libraryStatus? 'active-library':''}`}>\r\n      <h2>Library</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            song={song}\r\n            isPlaying={isPlaying}\r\n            songs={songs}\r\n            cover={song.cover}\r\n            name={song.name}\r\n            artist={song.artist}\r\n            id={song.id}\r\n            key={song.id}\r\n            setSongs={setSongs}\r\n            audioRef={audioRef}\r\n            setCurrentSong={setCurrentSong}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n    );\r\n}\r\nexport default Library;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = ({libraryStatus,setLibraryStatus}) => {\r\n  \r\n  return (\r\n    <nav>\r\n      <h1>Waves</h1>\r\n      <button\r\n        className=\"library-active\" \r\n         onClick={()=>setLibraryStatus(!libraryStatus)}\r\n      >\r\n        Library\r\n        <FontAwesomeIcon icon={faMusic}></FontAwesomeIcon>\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;","import { v4 as uuidv4 } from \"uuid\";\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"Beaver Creek\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: \"Daylight\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Keep Going\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Nightfall\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Reflection\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Under the City Stars\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n      },\r\n    {\r\n        name: \"Going Back\",\r\n        artist:\"Swørn\",\r\n        cover: \"https://chillhop.com/wp-content/uploads/2020/10/0e5bb63f838ff92eeac142aae944e9f678df13c9-300x300.jpg\",\r\n        id: uuidv4(),\r\n        active: false,\r\n        color: [\"#CCB3C9\", \"#9A3060\"],\r\n        audio:\"https://mp3.chillhop.com/serve.php/?mp3=10305\"\r\n},\r\n    //ADD MORE HERE\r\n  ];\r\n}\r\n\r\nexport default chillHop;","import React, { useState, useRef } from \"react\";\nimport \"./styles/app.scss\";\n//Import Components\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n//Import data\nimport chillhop from \"./data\";\n//Util\nfunction App() {\n  //Ref\n  const audioRef = useRef(null);\n\n  const [songs, setSongs] = useState(chillhop());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n    volume: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const percentage = Math.round((roundedCurrent / roundedDuration) * 100);\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration: duration,\n      animationPercentage: percentage,\n      volume: e.target.volume,\n    });\n  };\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) audioRef.current.play();\n    return;\n  };\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song isPlaying={isPlaying} currentSong={currentSong} />\n      <Player\n        audioRef={audioRef}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n        isPlaying={isPlaying}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n        songs={songs}\n        setSongs={setSongs}\n        setCurrentSong={setCurrentSong}\n      />\n      <Library\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <audio\n        onLoadedMetadata={timeUpdateHandler}\n        onTimeUpdate={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndHandler}\n       \n      ></audio>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}